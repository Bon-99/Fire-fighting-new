
classdef LandingGoal < ros.Message
    %LandingGoal MATLAB implementation of hector_uav_msgs/LandingGoal
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hector_uav_msgs/LandingGoal' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '9a975e3289dd0b8ab52f7f62f182cd2a' % The MD5 Checksum of the message definition
        PropertyList = { 'LandingZone' } % List of non-constant message properties
        ROSPropertyList = { 'landing_zone' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.geometry_msgs.PoseStamped' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        LandingZone
    end
    methods
        function set.LandingZone(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.geometry_msgs.PoseStamped'};
            validateattributes(val, validClasses, validAttributes, 'LandingGoal', 'LandingZone')
            obj.LandingZone = val;
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hector_uav_msgs.LandingGoal.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hector_uav_msgs.LandingGoal(strObj);
        end
    end
end
